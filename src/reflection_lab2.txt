
1. Your design probably has a type called something like Car or Vehicle that is a supertype to both Volvo and Scania. 
What is the contract for gas() and brake() in this type? Do the implementations of gas() and brake() in both Volvo and 
Scania follow this contract? Does your design follow the Liskov Substitution Principle?

kontraktet för gas:
Inputen till gas är en double, och vi får ingen output, utan resultatet är att currentspeed har ett högre värde.

kontrakt för brake:
Likt gas, är inputen till brake en double och vi får ingen direkt output, utan currentspeed kommer att minska

Metoderna gas() och brake() 




How did you handle duplicated code between Scania, the car transporters and the repair shops? Explain how you decided when to use subclassing and when to use composition and delegation.
Did you need to modify the design from lab 1 in order to make these extensions? If so, how could you have noticed that your design from Lab 1 did not follow the Open-Closed Principle before you started working on Lab 2?